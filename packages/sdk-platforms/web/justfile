#!/usr/bin/env just --justfile

# Show available commands
default:
    @just --list

# Build WASM and check native compilation
build:
    @echo "Building WASM package..."
    @wasm-pack build --target web --out-dir pkg crates/alloy-web-ffi
    @just ../../web/alloy-web/copy-wasm
    @echo "Building for native platform..."
    @cargo build

# Build the CLI tool
build-cli:
    @echo "Building CLI tool..."
    @cargo build --release --bin alloy-web-cli

# Run all tests (unit + integration)
test:
    @echo "Running all Rust tests..."
    @cargo test

# Run only unit tests
test-unit:
    @echo "Running Rust unit tests..."
    @cargo test --lib

# Run only integration tests
test-integration:
    @echo "Running Rust integration tests..."
    @cargo test --test '*'

# Format code (check)
fmt-check:
    cargo +nightly fmt --all -- --check

# Format code (apply changes)
fmt:
    cargo +nightly fmt --all

# Lint code
clippy:
    cargo clippy --all-targets -- -D warnings

# Lint code with auto-fix
clippy-fix:
    cargo clippy --fix --allow-dirty --allow-staged

# Format and fix linting issues
fix:
    cargo +nightly fmt --all
    cargo clippy --fix --allow-dirty --allow-staged
    cargo +nightly fmt --all
    cargo clippy --fix --allow-dirty --allow-staged

# Run clippy linter (legacy alias)
lint:
    @cargo clippy --all-targets --all-features -- -D warnings

# Check formatting and linting
check: fmt lint
    @cargo check --all-targets

# Clean build artifacts
clean:
    @cargo clean
    @rm -rf pkg

# Show WASM file size
size:
    @echo "WASM file sizes:"
    @ls -lh pkg/*.wasm 2>/dev/null || echo "No WASM files found. Run 'just build' first."

# Update dependencies
update:
    @cargo update

# Watch for changes and rebuild
watch:
    @cargo watch -x "build --release --target wasm32-unknown-unknown" -s "wasm-pack build --target web --out-dir pkg"

# Publish to npm
publish: build
    @npm publish

# Dry-run publish
publish-dry: build
    @npm pack --dry-run
